<?xml version="1.0" encoding="UTF-8"?>

<!-- =====================================================================
MathReceiverComponentAi.xml
Generated by fpp-to-xml
====================================================================== -->
<component namespace="MathModule" name="MathReceiver" kind="queued">

  <comment>
  Component for receiving and performing a math operation
  </comment>

  <import_enum_type>Types/MathOpEnumAi.xml</import_enum_type>
  <import_port_type>Fw/Cmd/CmdPortAi.xml</import_port_type>
  <import_port_type>Fw/Cmd/CmdRegPortAi.xml</import_port_type>
  <import_port_type>Fw/Cmd/CmdResponsePortAi.xml</import_port_type>
  <import_port_type>Fw/Log/LogPortAi.xml</import_port_type>
  <import_port_type>Fw/Log/LogTextPortAi.xml</import_port_type>
  <import_port_type>Fw/Prm/PrmGetPortAi.xml</import_port_type>
  <import_port_type>Fw/Prm/PrmSetPortAi.xml</import_port_type>
  <import_port_type>Fw/Time/TimePortAi.xml</import_port_type>
  <import_port_type>Fw/Tlm/TlmPortAi.xml</import_port_type>
  <import_port_type>Ports/MathResultPortAi.xml</import_port_type>
  <import_port_type>Ports/OpRequestPortAi.xml</import_port_type>
  <import_port_type>Svc/Sched/SchedPortAi.xml</import_port_type>

  <ports>
    <port name="cmdIn" data_type="Fw::Cmd" kind="input" role="Cmd" max_number="1">
      <comment>
      Command receive
      </comment>
    </port>
    <port name="cmdRegOut" data_type="Fw::CmdReg" kind="output" role="CmdRegistration" max_number="1">
      <comment>
      Command registration
      </comment>
    </port>
    <port name="cmdResponseOut" data_type="Fw::CmdResponse" kind="output" role="CmdResponse" max_number="1">
      <comment>
      Command response
      </comment>
    </port>
    <port name="eventOut" data_type="Fw::Log" kind="output" role="LogEvent" max_number="1">
      <comment>
      Event
      </comment>
    </port>
    <port name="mathOpIn" data_type="MathModule::OpRequest" kind="async_input" max_number="1" full="assert">
      <comment>
      Port for receiving the math operation
      </comment>
    </port>
    <port name="mathResultOut" data_type="MathModule::MathResult" kind="output" max_number="1">
      <comment>
      Port for returning the math result
      </comment>
    </port>
    <port name="prmGetOut" data_type="Fw::PrmGet" kind="output" role="ParamGet" max_number="1">
      <comment>
      Parameter get
      </comment>
    </port>
    <port name="prmSetOut" data_type="Fw::PrmSet" kind="output" role="ParamSet" max_number="1">
      <comment>
      Parameter set
      </comment>
    </port>
    <port name="schedIn" data_type="Svc::Sched" kind="sync_input" max_number="1">
      <comment>
      The rate group scheduler input
      </comment>
    </port>
    <port name="textEventOut" data_type="Fw::LogText" kind="output" role="LogTextEvent" max_number="1">
      <comment>
      Text event
      </comment>
    </port>
    <port name="timeGetOut" data_type="Fw::Time" kind="output" role="TimeGet" max_number="1">
      <comment>
      Time get
      </comment>
    </port>
    <port name="tlmOut" data_type="Fw::Tlm" kind="output" role="Telemetry" max_number="1">
      <comment>
      Telemetry
      </comment>
    </port>
  </ports>

  <commands>
    <command kind="async" opcode="0x0" mnemonic="CLEAR_EVENT_THROTTLE" full="assert">
      <comment>
      Clear the event throttle
      </comment>
    </command>
  </commands>

  <events>
    <event id="0x0" name="FACTOR_UPDATED" severity="ACTIVITY_HI" format_string="Factor updated to %f" throttle="3">
      <comment>
      Factor updated
      </comment>
      <args>
        <arg name="val" type="F32">
          <comment>
          The factor value
          </comment>
        </arg>
      </args>
    </event>
    <event id="0x1" name="OPERATION_PERFORMED" severity="ACTIVITY_HI" format_string="%s operation performed">
      <comment>
      Math operation performed
      </comment>
      <args>
        <arg name="val" type="MathModule::MathOp">
          <comment>
          The operation
          </comment>
        </arg>
      </args>
    </event>
    <event id="0x2" name="THROTTLE_CLEARED" severity="ACTIVITY_HI" format_string="Event throttle cleared">
      <comment>
      Event throttle cleared
      </comment>
    </event>
  </events>

  <parameters>
    <parameter id="0x0" set_opcode="0xA" save_opcode="0xB" name="FACTOR" data_type="F32" default="1.0f">
      <comment>
      The multiplier in the math operation
      </comment>
    </parameter>
  </parameters>

  <telemetry>
    <channel id="0x0" name="OPERATION" data_type="MathModule::MathOp" update="always">
      <comment>
      The operation
      </comment>
    </channel>
    <channel id="0x1" name="FACTOR" data_type="F32" update="always">
      <comment>
      Multiplication factor
      </comment>
    </channel>
  </telemetry>

</component>
