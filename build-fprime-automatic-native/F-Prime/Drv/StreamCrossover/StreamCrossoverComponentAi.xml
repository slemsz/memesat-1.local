<?xml version="1.0" encoding="UTF-8"?>

<!-- =====================================================================
StreamCrossoverComponentAi.xml
Generated by fpp-to-xml
====================================================================== -->
<component namespace="Drv" name="StreamCrossover" kind="passive">

  <import_enum_type>Drv/ByteStreamDriverModel/SendStatusEnumAi.xml</import_enum_type>
  <import_port_type>Drv/ByteStreamDriverModel/ByteStreamRecvPortAi.xml</import_port_type>
  <import_port_type>Drv/ByteStreamDriverModel/ByteStreamSendPortAi.xml</import_port_type>
  <import_port_type>Fw/Buffer/BufferSendPortAi.xml</import_port_type>
  <import_port_type>Fw/Log/LogPortAi.xml</import_port_type>
  <import_port_type>Fw/Log/LogTextPortAi.xml</import_port_type>
  <import_port_type>Fw/Time/TimePortAi.xml</import_port_type>

  <ports>
    <port name="errorDeallocate" data_type="Fw::BufferSend" kind="output" max_number="1">
      <comment>
      Allows for deallocation after bad receive status
      </comment>
    </port>
    <port name="logOut" data_type="Fw::Log" kind="output" role="LogEvent" max_number="1">
      <comment>
      Port for sending events to downlink
      </comment>
    </port>
    <port name="logTextOut" data_type="Fw::LogText" kind="output" role="LogTextEvent" max_number="1">
      <comment>
      Port for sending textual representation of events
      </comment>
    </port>
    <port name="streamIn" data_type="Drv::ByteStreamRecv" kind="sync_input" max_number="1"/>
    <port name="streamOut" data_type="Drv::ByteStreamSend" kind="output" max_number="1"/>
    <port name="timeCaller" data_type="Fw::Time" kind="output" role="TimeGet" max_number="1">
      <comment>
      Port for requesting the current time
      </comment>
    </port>
  </ports>

  <events>
    <event id="0x0" name="StreamOutError" severity="WARNING_HI" format_string="StreamCrossover StreamOut Error: %s">
      <comment>
      Indicates buffer failed to send to streamOut.
      </comment>
      <args>
        <arg name="sendStatus" type="Drv::SendStatus"/>
      </args>
    </event>
  </events>

</component>
