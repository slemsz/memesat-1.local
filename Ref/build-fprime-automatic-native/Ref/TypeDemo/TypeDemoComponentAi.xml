<?xml version="1.0" encoding="UTF-8"?>

<!-- =====================================================================
TypeDemoComponentAi.xml
Generated by fpp-to-xml
====================================================================== -->
<component namespace="Ref" name="TypeDemo" kind="passive">

  <comment>
  Component to demonstrate multiple type configurations
  </comment>

  <import_array_type>Ref/TypeDemo/FloatSetArrayAi.xml</import_array_type>
  <import_array_type>Ref/TypeDemo/ManyChoicesArrayAi.xml</import_array_type>
  <import_array_type>Ref/TypeDemo/TooManyChoicesArrayAi.xml</import_array_type>
  <import_enum_type>Fw/Prm/ParamValidEnumAi.xml</import_enum_type>
  <import_enum_type>Ref/TypeDemo/ChoiceEnumAi.xml</import_enum_type>
  <import_port_type>Fw/Cmd/CmdPortAi.xml</import_port_type>
  <import_port_type>Fw/Cmd/CmdRegPortAi.xml</import_port_type>
  <import_port_type>Fw/Cmd/CmdResponsePortAi.xml</import_port_type>
  <import_port_type>Fw/Log/LogPortAi.xml</import_port_type>
  <import_port_type>Fw/Log/LogTextPortAi.xml</import_port_type>
  <import_port_type>Fw/Prm/PrmGetPortAi.xml</import_port_type>
  <import_port_type>Fw/Prm/PrmSetPortAi.xml</import_port_type>
  <import_port_type>Fw/Time/TimePortAi.xml</import_port_type>
  <import_port_type>Fw/Tlm/TlmPortAi.xml</import_port_type>
  <import_serializable_type>Ref/TypeDemo/ChoicePairSerializableAi.xml</import_serializable_type>
  <import_serializable_type>Ref/TypeDemo/ChoiceSlurrySerializableAi.xml</import_serializable_type>

  <ports>
    <port name="cmdIn" data_type="Fw::Cmd" kind="input" role="Cmd" max_number="1">
      <comment>
      Command received port
      </comment>
    </port>
    <port name="cmdRegOut" data_type="Fw::CmdReg" kind="output" role="CmdRegistration" max_number="1">
      <comment>
      Command registration port
      </comment>
    </port>
    <port name="cmdResponseOut" data_type="Fw::CmdResponse" kind="output" role="CmdResponse" max_number="1">
      <comment>
      Command response port
      </comment>
    </port>
    <port name="logOut" data_type="Fw::Log" kind="output" role="LogEvent" max_number="1">
      <comment>
      Event port
      </comment>
    </port>
    <port name="logTextOut" data_type="Fw::LogText" kind="output" role="LogTextEvent" max_number="1">
      <comment>
      Text event port
      </comment>
    </port>
    <port name="prmGetOut" data_type="Fw::PrmGet" kind="output" role="ParamGet" max_number="1">
      <comment>
      Parameter get
      </comment>
    </port>
    <port name="prmSetOut" data_type="Fw::PrmSet" kind="output" role="ParamSet" max_number="1">
      <comment>
      Parameter set
      </comment>
    </port>
    <port name="timeCaller" data_type="Fw::Time" kind="output" role="TimeGet" max_number="1">
      <comment>
      Time get port
      </comment>
    </port>
    <port name="tlmOut" data_type="Fw::Tlm" kind="output" role="Telemetry" max_number="1">
      <comment>
      Telemetry port
      </comment>
    </port>
  </ports>

  <commands>
    <command kind="sync" opcode="0x0" mnemonic="CHOICE">
      <comment>
      Single choice command
      </comment>
      <args>
        <arg name="choice" type="Ref::Choice">
          <comment>
          A single choice
          </comment>
        </arg>
      </args>
    </command>
    <command kind="sync" opcode="0x3" mnemonic="CHOICES">
      <comment>
      Multiple choice command via Array
      </comment>
      <args>
        <arg name="choices" type="Ref::ManyChoices">
          <comment>
          A set of choices
          </comment>
        </arg>
      </args>
    </command>
    <command kind="sync" opcode="0x4" mnemonic="CHOICES_WITH_FRIENDS">
      <comment>
      Multiple choice command via Array with a preceding and following argument
      </comment>
      <args>
        <arg name="repeat" type="U8">
          <comment>
          Number of times to repeat the choices
          </comment>
        </arg>
        <arg name="choices" type="Ref::ManyChoices">
          <comment>
          A set of choices
          </comment>
        </arg>
        <arg name="repeat_max" type="U8">
          <comment>
          Limit to the number of repetitions
          </comment>
        </arg>
      </args>
    </command>
    <command kind="sync" opcode="0x7" mnemonic="EXTRA_CHOICES">
      <comment>
      Too many choice command via Array
      </comment>
      <args>
        <arg name="choices" type="Ref::TooManyChoices">
          <comment>
          Way to many choices to make
          </comment>
        </arg>
      </args>
    </command>
    <command kind="sync" opcode="0x8" mnemonic="EXTRA_CHOICES_WITH_FRIENDS">
      <comment>
      Too many choices command via Array with a preceding and following argument
      </comment>
      <args>
        <arg name="repeat" type="U8">
          <comment>
          Number of times to repeat the choices
          </comment>
        </arg>
        <arg name="choices" type="Ref::TooManyChoices">
          <comment>
          Way to many choices to make
          </comment>
        </arg>
        <arg name="repeat_max" type="U8">
          <comment>
          Limit to the number of repetitions
          </comment>
        </arg>
      </args>
    </command>
    <command kind="sync" opcode="0xB" mnemonic="CHOICE_PAIR">
      <comment>
      Multiple choice command via Structure
      </comment>
      <args>
        <arg name="choices" type="Ref::ChoicePair">
          <comment>
          A pair of choices
          </comment>
        </arg>
      </args>
    </command>
    <command kind="sync" opcode="0xC" mnemonic="CHOICE_PAIR_WITH_FRIENDS">
      <comment>
      Multiple choices command via Structure with a preceding and following argument
      </comment>
      <args>
        <arg name="repeat" type="U8">
          <comment>
          Number of times to repeat the choices
          </comment>
        </arg>
        <arg name="choices" type="Ref::ChoicePair">
          <comment>
          A pair of choices
          </comment>
        </arg>
        <arg name="repeat_max" type="U8">
          <comment>
          Limit to the number of repetitions
          </comment>
        </arg>
      </args>
    </command>
    <command kind="sync" opcode="0xF" mnemonic="GLUTTON_OF_CHOICE">
      <comment>
      Multiple choice command via Complex Structure
      </comment>
      <args>
        <arg name="choices" type="Ref::ChoiceSlurry">
          <comment>
          A phenomenal amount of choice
          </comment>
        </arg>
      </args>
    </command>
    <command kind="sync" opcode="0x10" mnemonic="GLUTTON_OF_CHOICE_WITH_FRIENDS">
      <comment>
      Multiple choices command via Complex Structure with a preceding and following argument
      </comment>
      <args>
        <arg name="repeat" type="U8">
          <comment>
          Number of times to repeat the choices
          </comment>
        </arg>
        <arg name="choices" type="Ref::ChoiceSlurry">
          <comment>
          A phenomenal amount of choice
          </comment>
        </arg>
        <arg name="repeat_max" type="U8">
          <comment>
          Limit to the number of repetitions
          </comment>
        </arg>
      </args>
    </command>
    <command kind="sync" opcode="0x13" mnemonic="DUMP_TYPED_PARAMETERS">
      <comment>
      Dump the typed parameters
      </comment>
    </command>
    <command kind="sync" opcode="0x14" mnemonic="DUMP_FLOATS">
      <comment>
      Dump the float values
      </comment>
    </command>
  </commands>

  <events>
    <event id="0x0" name="ChoiceEv" severity="ACTIVITY_HI" format_string="Choice: %s">
      <comment>
      Single choice event
      </comment>
      <args>
        <arg name="choice" type="Ref::Choice"/>
      </args>
    </event>
    <event id="0x1" name="ChoicesEv" severity="ACTIVITY_HI" format_string="Choices: %s">
      <comment>
      Multiple choice event via Array
      </comment>
      <args>
        <arg name="choices" type="Ref::ManyChoices"/>
      </args>
    </event>
    <event id="0x2" name="ExtraChoicesEv" severity="ACTIVITY_HI" format_string="Choices: %s">
      <comment>
      Too many choice event via Array
      </comment>
      <args>
        <arg name="choices" type="Ref::TooManyChoices"/>
      </args>
    </event>
    <event id="0x3" name="ChoicePairEv" severity="ACTIVITY_HI" format_string="Choices: %s">
      <comment>
      Multiple choice event via Structure
      </comment>
      <args>
        <arg name="choices" type="Ref::ChoicePair"/>
      </args>
    </event>
    <event id="0x4" name="ChoiceSlurryEv" severity="ACTIVITY_HI" format_string="Choices: %s">
      <comment>
      Multiple choice event via Complex Structure
      </comment>
      <args>
        <arg name="choices" type="Ref::ChoiceSlurry"/>
      </args>
    </event>
    <event id="0x5" name="ChoicePrmEv" severity="ACTIVITY_HI" format_string="CHOICE_PRM: %s with validity: %s">
      <comment>
      Single choice parameter event
      </comment>
      <args>
        <arg name="choice" type="Ref::Choice"/>
        <arg name="validity" type="Fw::ParamValid"/>
      </args>
    </event>
    <event id="0x6" name="ChoicesPrmEv" severity="ACTIVITY_HI" format_string="CHOICES_PRM: %s with validity: %s">
      <comment>
      Multiple choice parameter event via Array
      </comment>
      <args>
        <arg name="choices" type="Ref::ManyChoices"/>
        <arg name="validity" type="Fw::ParamValid"/>
      </args>
    </event>
    <event id="0x7" name="ExtraChoicesPrmEv" severity="ACTIVITY_HI" format_string="EXTRA_CHOICES_PRM: %s with validity: %s">
      <comment>
      Too many choice parameter event via Array
      </comment>
      <args>
        <arg name="choices" type="Ref::TooManyChoices"/>
        <arg name="validity" type="Fw::ParamValid"/>
      </args>
    </event>
    <event id="0x8" name="ChoicePairPrmEv" severity="ACTIVITY_HI" format_string="CHOICE_PAIR_PRM: %s with validity: %s">
      <comment>
      Multiple choice parameter event via Structure
      </comment>
      <args>
        <arg name="choices" type="Ref::ChoicePair"/>
        <arg name="validity" type="Fw::ParamValid"/>
      </args>
    </event>
    <event id="0x9" name="ChoiceSlurryPrmEv" severity="ACTIVITY_HI" format_string="GLUTTON_OF_CHOICE_PRM: %s with validity: %s">
      <comment>
      Multiple choice parameter event via Complex Structure
      </comment>
      <args>
        <arg name="choices" type="Ref::ChoiceSlurry"/>
        <arg name="validity" type="Fw::ParamValid"/>
      </args>
    </event>
    <event id="0xA" name="FloatEv" severity="ACTIVITY_HI" format_string="Floats: %g %g %g as a set: %s">
      <comment>
      A set of floats in an event
      </comment>
      <args>
        <arg name="float1" type="F32"/>
        <arg name="float2" type="F32"/>
        <arg name="float3" type="F32"/>
        <arg name="floats" type="Ref::FloatSet"/>
      </args>
    </event>
  </events>

  <parameters>
    <parameter id="0x0" set_opcode="0x1" save_opcode="0x2" name="CHOICE_PRM" data_type="Ref::Choice">
      <comment>
      Single enumeration parameter
      </comment>
    </parameter>
    <parameter id="0x1" set_opcode="0x5" save_opcode="0x6" name="CHOICES_PRM" data_type="Ref::ManyChoices">
      <comment>
      Multiple enumeration parameter via Array
      </comment>
    </parameter>
    <parameter id="0x2" set_opcode="0x9" save_opcode="0xA" name="EXTRA_CHOICES_PRM" data_type="Ref::ManyChoices">
      <comment>
      Too many enumeration parameter via Array
      </comment>
    </parameter>
    <parameter id="0x3" set_opcode="0xD" save_opcode="0xE" name="CHOICE_PAIR_PRM" data_type="Ref::ChoicePair">
      <comment>
      Multiple enumeration parameter via Structure
      </comment>
    </parameter>
    <parameter id="0x4" set_opcode="0x11" save_opcode="0x12" name="GLUTTON_OF_CHOICE_PRM" data_type="Ref::ChoiceSlurry">
      <comment>
      Multiple enumeration parameter via Complex Structure
      </comment>
    </parameter>
  </parameters>

  <telemetry>
    <channel id="0x0" name="ChoiceCh" data_type="Ref::Choice" update="always">
      <comment>
      Single choice channel
      </comment>
    </channel>
    <channel id="0x1" name="ChoicesCh" data_type="Ref::ManyChoices" update="always">
      <comment>
      Multiple choice channel via Array
      </comment>
    </channel>
    <channel id="0x2" name="ExtraChoicesCh" data_type="Ref::TooManyChoices" update="always">
      <comment>
      Too many choice channel via Array
      </comment>
    </channel>
    <channel id="0x3" name="ChoicePairCh" data_type="Ref::ChoicePair" update="always">
      <comment>
      Multiple choice channel via Structure
      </comment>
    </channel>
    <channel id="0x4" name="ChoiceSlurryCh" data_type="Ref::ChoiceSlurry" update="always">
      <comment>
      Multiple choice channel via Complex Structure
      </comment>
    </channel>
    <channel id="0x5" name="Float1Ch" data_type="F32" update="always">
      <comment>
      Float output channel 1
      </comment>
    </channel>
    <channel id="0x6" name="Float2Ch" data_type="F32" update="always">
      <comment>
      Float output channel 2
      </comment>
    </channel>
    <channel id="0x7" name="Float3Ch" data_type="F32" update="always">
      <comment>
      Float output channel 3
      </comment>
    </channel>
    <channel id="0x8" name="FloatSet" data_type="Ref::FloatSet" update="always">
      <comment>
      Float set output channel
      </comment>
    </channel>
  </telemetry>

</component>
